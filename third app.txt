import 'package:flutter/material.dart';
import 'package:provider/provider.dart';

void main() {
  runApp(
    ChangeNotifierProvider<CoffeeData>(
      create: (context) => CoffeeData(),
      builder: (context, child) => const MyApp(),
    ),
  );
}

class CoffeeData extends ChangeNotifier {
  String location = 'Bilzen, Tanjungbalai';
  String searchText = '';
  String profileImageUrl =
      "https://www.gstatic.com/flutter-onestack-prototype/genui/example_1.jpg";

  void setLocation(String newLocation) {
    location = newLocation;
    notifyListeners();
  }

  void setSearchText(String newText) {
    searchText = newText;
    notifyListeners();
  }

  void setProfileImageUrl(String newImageUrl) {
    profileImageUrl = newImageUrl;
    notifyListeners();
  }
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Coffee App',
      theme: ThemeData(
        scaffoldBackgroundColor: Colors.white, // Set the overall background color to white
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.white),
        useMaterial3: true,
      ),
      home: const CoffeeHomePage(),
    );
  }
}

class CoffeeHomePage extends StatefulWidget {
  const CoffeeHomePage({super.key});

  @override
  State<CoffeeHomePage> createState() => _CoffeeHomePageState();
}

class _CoffeeHomePageState extends State<CoffeeHomePage> {
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SingleChildScrollView(
        child: Padding(
          padding: const EdgeInsets.all(16.0),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              const Text(
                'Groups',
                style: TextStyle(
                    fontSize: 24 * 1.4,
                    fontWeight: FontWeight.bold,
                    color: Colors.grey),
              ),
              const SizedBox(height: 16 * 1.4),
              Container(
                decoration: BoxDecoration(
                  color: Colors.black.withOpacity(0.8),
                  borderRadius: BorderRadius.circular(16 * 1.4),
                ),
                padding: const EdgeInsets.all(16 * 1.4),
                child: Column(
                  crossAxisAlignment: CrossAxisAlignment.start,
                  children: [
                    Row(
                      mainAxisAlignment: MainAxisAlignment.spaceBetween,
                      children: [
                        Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            const Text(
                              'Location',
                              style: TextStyle(fontSize: 12 * 1.4, color: Colors.grey),
                            ),
                            Row(
                              children: [
                                Consumer<CoffeeData>(
                                  builder: (context, coffeeData, child) => Text(
                                    coffeeData.location,
                                    style: const TextStyle(color: Colors.white, fontSize: 16 * 1.4),
                                  ),
                                ),
                                const Icon(Icons.arrow_drop_down,
                                    color: Colors.white),
                              ],
                            ),
                          ],
                        ),
                        Consumer<CoffeeData>(
                          builder: (context, coffeeData, child) =>
                              GestureDetector(
                            onTap: () {
                              coffeeData.setProfileImageUrl(
                                  "https://www.gstatic.com/flutter-onestack-prototype/genui/example_1.jpg");
                            },
                            child: CircleAvatar(
                              radius: 25 * 1.4,
                              backgroundImage:
                                  NetworkImage(coffeeData.profileImageUrl),
                            ),
                          ),
                        ),
                      ],
                    ),
                    const SizedBox(height: 8 * 1.4),
                    Row(
                      children: [
                        const Icon(Icons.search, color: Colors.grey),
                        const SizedBox(width: 8 * 1.4),
                        Expanded(
                          child: TextField(
                            decoration: const InputDecoration(
                              hintText: 'Search coffee',
                              hintStyle: TextStyle(color: Colors.grey),
                              border: InputBorder.none,
                            ),
                            style: const TextStyle(color: Colors.white, fontSize: 14 * 1.4),
                            onChanged: (text) {
                              Provider.of<CoffeeData>(context, listen: false)
                                  .setSearchText(text);
                            },
                          ),
                        ),
                        const Icon(Icons.tune, color: Colors.grey),
                      ],
                    ),
                    const SizedBox(height: 16 * 1.4),
                    Stack(
                      children: [
                        ClipRRect(
                          borderRadius: BorderRadius.circular(12 * 1.4),
                          child: Image.network(
                            "https://images.pexels.com/photos/302896/pexels-photo-302896.jpeg?auto=compress&cs=tinysrgb&w=1200",
                            height: 200 * 1.4,
                            width: double.infinity,
                            fit: BoxFit.cover,
                          ),
                        ),
                        Positioned(
                          top: 8 * 1.4,
                          left: 8 * 1.4,
                          child: Container(
                            padding: const EdgeInsets.symmetric(
                                horizontal: 8 * 1.4, vertical: 4 * 1.4),
                            decoration: BoxDecoration(
                              color: Colors.red,
                              borderRadius: BorderRadius.circular(8 * 1.4),
                            ),
                            child: const Text(
                              'Promo',
                              style:
                                  TextStyle(color: Colors.white, fontSize: 12 * 1.4),
                            ),
                          ),
                        ),
                        const Positioned(
                          bottom: 16 * 1.4,
                          left: 16 * 1.4,
                          child: Text(
                            'Buy one get\none Free',
                            style: TextStyle(
                                color: Colors.white,
                                fontSize: 20 * 1.4,
                                fontWeight: FontWeight.bold,
                                backgroundColor: Colors.black),
                          ),
                        ),
                      ],
                    ),
                  ],
                ),
              ),
              const SizedBox(height: 16 * 1.4),
              SingleChildScrollView(
                scrollDirection: Axis.horizontal,
                child: Row(
                  children: [
                    _buildCoffeeTypeButton(
                      text: 'Cappuccino',
                      isSelected: true,
                    ),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Machiatto'),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Latte'),
                    const SizedBox(width: 8 * 1.4),
                    _buildCoffeeTypeButton(text: 'Americano'),
                  ],
                ),
              ),
              const SizedBox(height: 16 * 1.4),
              Wrap(
                spacing: 16.0 * 1.4,
                runSpacing: 16.0 * 1.4,
                alignment: WrapAlignment.spaceEvenly,
                children: const [
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/2396220/pexels-photo-2396220.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.8,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/3879495/pexels-photo-3879495.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.8,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/3020919/pexels-photo-3020919.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.5,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                  CoffeeCard(
                    imageUrl:
                        "https://images.pexels.com/photos/2907301/pexels-photo-2907301.jpeg?auto=compress&cs=tinysrgb&w=1200",
                    rating: 4.0,
                    name: 'Cappuccino',
                    description: 'with Chocolate',
                    price: '4.53',
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }

  Widget _buildCoffeeTypeButton({required String text, bool isSelected = false}) {
    return ElevatedButton(
      onPressed: () {},
      style: ElevatedButton.styleFrom(
        backgroundColor: isSelected ? const Color(0xFF795548) : Colors.grey.shade200,
        foregroundColor: isSelected ? Colors.white : Colors.black,
        shape: RoundedRectangleBorder(
          borderRadius: BorderRadius.circular(8 * 1.4),
        ),
        padding: const EdgeInsets.symmetric(horizontal: 16 * 1.4, vertical: 8 * 1.4),
        textStyle: const TextStyle(fontSize: 16 * 1.4)
      ),
      child: Text(text),
    );
  }
}

class CoffeeCard extends StatelessWidget {
  const CoffeeCard({
    super.key,
    required this.imageUrl,
    required this.rating,
    required this.name,
    required this.description,
    required this.price,
  });

  final String imageUrl;
  final double rating;
  final String name;
  final String description;
  final String price;

  @override
  Widget build(BuildContext context) {
    return SizedBox(
      width: 220 * 1.4,
      child: Card(
        color: Colors.white, // Set the card background color to white
        child: Padding(
          padding: const EdgeInsets.all(8.0 * 1.4),
          child: Column(
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Stack(
                children: [
                  ClipRRect(
                    borderRadius: BorderRadius.circular(12 * 1.4),
                    child: Image.network(
                      imageUrl,
                      height: 160 * 1.4,
                      width: double.infinity,
                      fit: BoxFit.cover,
                    ),
                  ),
                  Positioned(
                    top: 8 * 1.4,
                    left: 8 * 1.4,
                    child: Container(
                      padding: const EdgeInsets.symmetric(
                          horizontal: 6 * 1.4, vertical: 2 * 1.4),
                      decoration: BoxDecoration(
                        color: Colors.black.withOpacity(0.5),
                        borderRadius: BorderRadius.circular(8 * 1.4),
                      ),
                      child: Row(
                        children: [
                          const Icon(Icons.star, color: Colors.yellow, size: 16 * 1.4),
                          Text(
                            rating.toString(),
                            style: const TextStyle(color: Colors.white, fontSize: 14 * 1.4),
                          ),
                        ],
                      ),
                    ),
                  ),
                ],
              ),
              const SizedBox(height: 8 * 1.4),
              Text(
                name,
                style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16 * 1.4, color: Colors.black), // Set text color to black
              ),
              Text(
                description,
                style: const TextStyle(color: Colors.grey, fontSize: 12 * 1.4),
              ),
              const SizedBox(height: 8 * 1.4),
              Row(
                mainAxisAlignment: MainAxisAlignment.spaceBetween,
                children: [
                  Text(
                    '\$$price',
                    style: const TextStyle(fontWeight: FontWeight.bold, fontSize: 16 * 1.4, color: Colors.black), // Set text color to black
                  ),
                  Container(
                    decoration: BoxDecoration(
                      color: Colors.orange.shade200,
                      borderRadius: BorderRadius.circular(8 * 1.4),
                    ),
                    child: const Icon(Icons.add),
                  ),
                ],
              ),
            ],
          ),
        ),
      ),
    );
  }
}